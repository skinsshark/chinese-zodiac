{"version":3,"sources":["Main.js","utils.js","inputs/YearInput.js","Year.js","inputs/MonthInput.js","inputs/DayInput.js","MonthDay.js","Result.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","history","useHistory","className","onClick","push","NUMBERS","chineseNumbers","digits","numbersStr","Array","from","map","number","join","limitInputLength","value","setFunction","definedLength","length","slice","YEAR_LENGTH","YearInput","year","autoFocus","type","maxLength","placeholder","onChange","e","target","setYear","Year","isDisabled","moment","format","nextPage","onKeyDown","keyCode","disabled","MONTH_LENGTH","MonthInput","month","setMonth","DAY_LENGTH","DayInput","day","setDay","MonthDay","goBack","Result","birthday","date","solar","split","newMonth","newDay","animals","data","i","Number","name","Object","keys","calcAnimal","emoji","character","href","rel","role","aria-label","genFullBirthday","parseInt","App","useState","clearBirthday","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d13e8479.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport './Main.css';\n\nfunction Main(props) {\n  const history = useHistory();\n\n  function nextPage() {\n    history.push(\"/start\");\n  }\n\n  //星座?\n  return (\n    <main className=\"main\">\n      <h1>你属什么的?</h1>\n      <h3>Which Chinese Zodiac Animal Are You?</h3>\n      <button onClick={nextPage}>&rarr;</button>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nconst NUMBERS = [\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"];\n\nexport function chineseNumbers(digits) {\n  const arr = Array.from(digits);\n  const numbersStr = arr.map(number => NUMBERS[number])\n\n  return <header><h4>{numbersStr.join('')}</h4></header>\n}\n\nexport function limitInputLength(value, setFunction, definedLength) {\n  if (value.length > definedLength) {\n    setFunction(value.slice(0, definedLength))\n  } else {\n    setFunction(value)\n  }\n}\n","import React from 'react';\nimport './Input.css';\nimport { chineseNumbers, limitInputLength } from '../utils';\n\nconst YEAR_LENGTH = 4;\n\nfunction YearInput(props) {\n  return (\n    <div>\n      {chineseNumbers(props.year)}\n      <input\n        autoFocus={true}\n        value={props.year}\n        type=\"number\"\n        maxLength={YEAR_LENGTH}\n        placeholder=\"输入出生年\"\n        onChange={(e) => limitInputLength(e.target.value, props.setYear, YEAR_LENGTH)}\n      />\n    </div>\n  );\n}\n\nexport default YearInput;\n","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport YearInput from './inputs/YearInput';\nimport moment from 'moment';\nimport './inputs/Input.css';\n\nfunction Year(props) {\n  const {year, setYear} = props;\n\n  const isDisabled = year.length !== 4 || year < 1920 || year > moment().format('Y');\n  const history = useHistory();\n\n  function nextPage() {\n    history.push(\"/almost\");\n  }\n\n  return (\n    <main onKeyDown={(e) => {\n      if (e.keyCode === 13 && !isDisabled) {\n        nextPage();\n      }\n    }}>\n      <YearInput year={year} setYear={setYear} />\n      <h3>Enter your birth year</h3>\n      <button disabled={isDisabled} onClick={nextPage}>&rarr;</button>\n    </main>\n  );\n}\n\nexport default Year;\n","import React from 'react';\nimport './Input.css';\nimport { chineseNumbers, limitInputLength } from '../utils';\n\nconst MONTH_LENGTH = 2;\n\nfunction MonthInput(props) {\n  return (\n    <div>\n      {chineseNumbers(props.month)}\n      <input\n        autoFocus={true}\n        value={props.month}\n        type=\"number\"\n        maxLength={MONTH_LENGTH}\n        placeholder=\"月份\"\n        onChange={(e) => limitInputLength(e.target.value, props.setMonth, MONTH_LENGTH)}\n      />\n    </div>\n  );\n}\n\nexport default MonthInput;\n","import React from 'react';\nimport './Input.css';\nimport { chineseNumbers, limitInputLength } from '../utils';\n\nconst DAY_LENGTH = 2;\n\nfunction DayInput(props) {\n  return (\n    <div>\n      {chineseNumbers(props.day)}\n      <input\n        value={props.day}\n        type=\"number\"\n        maxLength={DAY_LENGTH}\n        placeholder=\"日子\"\n        onChange={(e) => limitInputLength(e.target.value, props.setDay, DAY_LENGTH)}\n      />\n    </div>\n  );\n}\n\nexport default DayInput;\n","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport MonthInput from './inputs/MonthInput';\nimport DayInput from './inputs/DayInput';\nimport './inputs/Input.css';\n\nfunction MonthDay(props) {\n  const {month, setMonth, day, setDay} = props;\n  const isDisabled = month.length < 1 || day.length < 1 || month < 1 || month > 12 || day < 1 || day > 31;\n  const history = useHistory();\n\n  function prevPage() {\n    history.goBack();\n  }\n\n  function nextPage() {\n    history.push(\"/result\");\n  }\n\n  return (\n    <main onKeyDown={(e) => {\n      if (e.keyCode === 13 && !isDisabled) {\n        nextPage();\n      }\n    }}>\n      <section className=\"month-day\">\n        <article>\n          <MonthInput\n            month={month}\n            setMonth={setMonth}\n          />\n          <h3>Month</h3>\n        </article>\n        <article>\n          <DayInput\n            day={day}\n            setDay={setDay}\n          />\n          <h3>Day</h3>\n        </article>\n      </section>\n      <button\n        className=\"back\"\n        onClick={prevPage}\n      >&larr;</button>\n      <button\n        disabled={isDisabled}\n        className=\"forward\"\n        onClick={nextPage}\n      >&rarr;</button>\n    </main>\n  );\n}\n\nexport default MonthDay;\n","import React from 'react';\nimport './Result.css';\nimport data from './animals.json';\nimport moment from 'moment';\nimport 'moment-lunar';\n\nfunction calcAnimal(birthday) {\n  const { year, month, day } = birthday;\n  /* eslint-disable no-unused-vars */\n  const [ _newYear, newMonth, newDay ] = moment().year(year).month(0).date(1).solar().format('YYYY-MM-DD').split('-');\n\n  const { animals } = data;\n  let i = year % 12;\n  if (month < Number(newMonth) || (month === Number(newMonth) && day < Number(newDay))) {\n    i--;\n  }\n\n  if (i < 0) {\n    i = 11;\n  }\n\n  const name = Object.keys(animals)[i];\n\n  return {\n    ...animals[name],\n    name\n  };\n}\n\nfunction Result(props) {\n  const {birthday} = props;\n  const { emoji, character, name } = calcAnimal(birthday);\n\n  return (\n    <>\n      <footer>\n        <a href=\"https://sharonzheng.com/\"\n          target=\"_blank\" rel=\"noopener noreferrer\">福</a>\n      </footer>\n      <div className=\"result\">\n        <h5>{birthday.year}/{birthday.month}/{birthday.day}</h5>\n        <div className=\"ani\">\n          <div className=\"moji\">\n            <span role=\"img\" aria-label={name}>{emoji}</span>\n            <span role=\"img\" aria-label={name}>{emoji}</span>\n            <span role=\"img\" aria-label={name}>{emoji}</span>\n          </div>\n          <div className=\"text\">{character}</div>\n          <div className=\"moji right\">\n            <span role=\"img\" aria-label={name}>{emoji}</span>\n            <span role=\"img\" aria-label={name}>{emoji}</span>\n            <span role=\"img\" aria-label={name}>{emoji}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Result;\n","import React from 'react';\nimport {useState} from 'react';\nimport { MemoryRouter, Route } from 'react-router';\nimport Main from './Main';\nimport Year from './Year';\nimport MonthDay from './MonthDay';\nimport Result from './Result';\nimport './App.css';\n\nfunction genFullBirthday(year, month, day) {\n  return {\n    \"year\": parseInt(year, 10),\n    \"month\": parseInt(month, 10),\n    \"day\": parseInt(day, 10),\n  }\n}\n\nfunction App() {\n  const [year, setYear] = useState('');\n  const [month, setMonth] = useState('');\n  const [day, setDay] = useState('');\n\n  function clearBirthday() {\n    setYear('');\n    setMonth('');\n    setDay('');\n  }\n\n  return (\n    <MemoryRouter>\n      <Route\n        exact\n        path=\"/\"\n        render={() => <Main />}\n      />\n      <Route\n        path=\"/start\"\n        render={() => <Year year={year} setYear={setYear} />}\n      />\n      <Route\n        path=\"/almost\"\n        render={() => (\n          <MonthDay\n            month={month}\n            setMonth={setMonth}\n            day={day}\n            setDay={setDay}\n          />\n        )}\n      />\n      <Route\n        path=\"/result\"\n        render={() => (\n          <Result\n            birthday={genFullBirthday(year, month, day)}\n            clearBirthday={clearBirthday}\n          />\n        )}\n      />\n    </MemoryRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}